#!/usr/bin/bash

SCRIPT_DIR="$(dirname "$(readlink "$0")")"

USAGE="Usage:  ${CMD:=${0##*/}} [(-s|--setup) (-p|--pass)]]"

# helper functions
exit2() {
    printf >&2 "%s:  %s: '%s'\n%s\n" "$CMD" "$1" "$2" "$USAGE"
    exit 2
}
check() { { [ "$1" != "$EOL" ] && [ "$1" != '--' ]; } || exit2 "missing argument" "$2"; } # avoid infinite loop

# parse command-line options
set -- "$@" "${EOL:=$(printf '\1\3\3\7')}" # end-of-list marker
while [ "$1" != "$EOL" ]; do
    opt="$1"
    shift
    case "$opt" in


    -p | --pass)
        check "$1" "$opt"
        opt_pass="$1"
        shift
        ;;
    -s | --setup) opt_setup='true' ;;
    -h | --help)
        printf "%s\n" "$USAGE"
        exit 0
        ;;

    # process specia
    --) while [ "$1" != "$EOL" ]; do
        set -- "$@" "$1"
        shift
    done ;;                                                          # parse remaining as positional
    --[!=]*=*) set -- "${opt%%=*}" "${opt#*=}" "$@" ;;               # "--opt=arg"  ->  "--opt" "arg"
    -[A-Za-z0-9] | -*[!A-Za-z0-9]*) exit2 "invalid option" "$opt" ;; # anything invalid like '-*'
    -?*)
        other="${opt#-?}"
        set -- "${opt%$other}" "-${other}" "$@"
        ;;                   # "-abc"  ->  "-a" "-bc"
    *) set -- "$@" "$opt" ;; # positional, rotate to the end
    esac
done
shift

# set password
if [ -z "$opt_pass"  ]; then
    # Get User pass
    read -sp 'Enter Production Server(s) Password: ' passphrase
    export PASSPHRASE=$passphrase
else
    export PASSPHRASE=$opt_pass
fi


echo
echo pm2-deploy will run:

if [[ "$opt_setup" == 'true' ]]; then
    echo -e "    pm2 deploy production setup\n    pm2 deploy production"
    expect "$SCRIPT_DIR/production-setup.exp"
else
    echo -e "    pm2 deploy production"
    expect "$SCRIPT_DIR/production-deploy.exp"
fi

